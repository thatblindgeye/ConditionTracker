{
  "name": "ConditionTracker",
  "script": "ConditionTracker.js",
  "version": "1.0",
  "previousversions": [],
  "description": "# ConditionTracker\rThank you for installing ConditionTracker! To suggest features or to report bugs, please create an issue at my [ConditionTracker repo](https://github.com/thatblindgeye/ConditionTracker).\rThe purpose of this script is to streamline adding conditions to tokens and tracking which conditions are currently affecting a token.\rThis script utilizes token tooltips as the primary way of tracking conditions, so it's best to not already be using tooltips for other purposes. Token markers are also utilized as an additional way to track conditions.\r## Basic Syntax\rIn order to use a ConditionTracker command, you must use the following syntax:\r`!ct <keyword>|<options>`\r\r- **`!ct`**: This must preface a ConditionTracker command in order to call it. This helps avoid name collisions with other installed scripts that may have similarly named commands.- **`<keyword>`** This is the primary command keyword which determines what command will be called. If a proper keyword is not passed in, or if a player does not have permission to use a command, an error message will be whispered to that player.- **`<options>`** This is what gets passed to the command. The format or limitation of options that can be passed in will depend on the command being called.\rWhen using a command, generally letter case is not important. Sending `!CT aDd|bLIndED` would be as valid as `!ct add|blinded`.\r## Commands List\rThe following commands are available for use. Most commands are setup so that only the GM has permission to call them.\r### Help (All)\r`!ct help|<optional comma separated list of command names>`e.g. `!ct help` or `!ct help|add, remove`\rThis will display a table of ConditionTracker commands in chat. The table includes the command keyword, the command syntax, and a description of the command.\rWhen at least one valid command name is passed in as an option, only the specified commands will be sent to chat.\r### Reset (GM)\r`!ct reset`\rThis will reset the ConditionTracker state to the default state for the currently installed version. **Running this command will overwrite any customizations made to the ConditionTracker state, and the reset cannot be undone**.\rWhen this command is called a message will be whispered to the GM, which will include buttons to either confirm or cancel the rest.\r### Markers (All)\r`!ct markers|<optional comma separated list of strings>`e.g. `!ct markers` or `!ct markers|bli, dea`\rThis will send to chat a table that lists the token markers currently available in the campaign. The table includes the token marker image and the token name. The token name that gets output is the name that must be used when customizing a condition's marker in the ConditionTracker Config character bio.\rThe options passed into this command act as filters, and do not need to exactly match a token marker name. For example, `!ct markers|bli, dea` would return any token markers with 'bli' or 'dea' in their name, such as 'blinded', 'deafened', and 'dead'.\r### Add (GM)\r`!ct add|<comma separated list of conditions>`e.g. `!ct add|blinded, deafened`\rThis will cumulatively add a single instance of the specified condition(s) to the selected token(s) tooltip. If a condition has a linked token marker, the token marker will also be cumulatively applied to the token.\rUp to two hyphenated numbers can follow each condition that is passed in. The first hyphenated number will be the amount of condition instances to add, while the second number will be the maximum the instances can total with the current command call. For example, `!ct add|blinded-2-5` would add 2 instances of the blinded condition, but only to a maximum of 5. If the current total of instances before calling the command is greater than the maximum, no instances will be added.\rWhen adding a single condition instance with a maximum amount, `!ct add|blinded--5` can be called instead of `!ct add|blinded-1-5`.\r### Remove (GM)\r`!ct remove|<comma separated list of conditions>`e.g. `!ct remove|blinded, deafened`\rThis will remove a single instance of the specified condition(s) from the selected token(s) tooltip. If a condition has a linked token marker, a single instances of that token marker will also be removed from the token.\rUp to two hyphenated numbers can follow each condition that is passed in. The first hyphenated number will be the amount of condition instances to remove, while the second number will be the minimum the instances can total with the current command call. For example, `!ct remove|blinded-2-5` would remove 2 instances of the blinded condition, but only to a minimum of 5. If the current total of instances before calling the command is less than the minimum, no instances will be removed.\rWhen removing a single condition instance with a minimum amount, `!ct remove|blinded--5` can be called instead of `!ct remove|blinded-1-5`.\rTo remove all instances of a condition you can pass in '-all' instead of a hyphenated number, such as `!ct remove|blinded-all`.\rIf no options are passed in, all instances of all conditions will be removed from the selected token(s).\r### Set (GM)\r`!ct set|<comma separated list of conditions with a hyphenated number>`e.g. `!ct set|blinded-5`\rThis will set the number of instances of the specified condition(s) on the selected token(s) to the specified amount. If a valid marker is linked to the condition, the linked marker will also be set on the token to the specified amount.\rEach condition passed in can be followed by a single hyphenated number, which will be the amount of instances to set for the condition. For example, `!ct set|blinded-5` would set the number of instances of the blinded condition to 5.\rPassing in a condition without a hyphenated number, such as `!ct set|blinded` would be the same as calling `!ct set|blinded-1`.\rPassing in 0 as the amount, such as `!ct set|blinded-0`, will remove the condition from the selected tokens.\r### Toggle (GM)\r`!ct toggle|<comma separated list of conditions>`e.g. `!ct toggle|blinded, deafened`\rThis will toggle the specified condition(s) on the selected token(s). If the token currently has a specified condition then the condition will be removed, otherwise the condition will be added. Any linked token markers will be toggled similarly.\r### Conditions (All)\r`!ct conditions|<optional comma separated list of conditions>`\rThis will send to chat a list of conditions and their descriptions depending on how the command is called. If one or more tokens are selected, any conditions affecting the selected tokens will be sent to chat. If no tokens are selected, all conditions currently set in the `ConditionTracker.conditions` state will be sent to chat.\rIf any conditions are passed in as options to the command, e.g. `!ct conditions|blinded, deafened`, the specified conditions will be sent to chat. This is the default behavior when options are passed in, even if a token is selected.\r### Tooltip (GM)\r`!ct tooltip|<optional true or false>`\rThis will determine whether token tooltips are displayed. The default setting is `true` to display token tooltips. Any tokens that are on the tabletop when the command is called with an option of `true` or `false` will be updated, and any tokens placed on the tabletop will be updated automatically based on this setting.\rIf no options are passed in, the current setting will be whispered to the GM.\r## ConditionTracker Config\rThe ConditionTracker Config character bio consists of an 'instructions' tab and a 'conditions' tab. The instructions tab includes the same information that follows, and the conditions tab is where you can customize the conditions, their linked markers, and their descriptions for your campaign.\r### Editing the Conditions Table\rWhen editing this conditions table, it is important to ensure the table remains intact and that the table layout is not altered.\r#### Condition column\rCells in this column refer to a condition's name. Each condition must be a simple string, and must be unique regardless of letter case. For example, `blinded` (all lowercase) and `Blinded` (capitalized first letter) would not be unique condition names. However the condition name is formatted here is how it will appear when rendered on a token's tooltip or when sent as a condition card in chat.\rWhen condition names are attempted to be saved, there are several checks that occur to ensure the condition name is valid. If a condition name is not valid, it is reformatted to become valid so that information entered by users is not lost. The checks that occur include:\r\r- Any vertical pipes `|` and hyphens `-` are removed- Extraneous whitespace is trimmed from the condition name (only a single whitespace is allowed between characters)- Empty strings are replaced with a condition name of 'Condition' + a unique number identifier- If the condition name already exists, a unique number identifier is appended to the condition name\rAfter all checks are finished, the conditions table is sorted alphabetically by condition name, ignoring letter case.\r#### Marker column\rCells in this column refer to a valid marker in your campaign's current token marker set, and will link the specified marker to the condition. Each marker name must be either a simple string, or the word 'null' if you do not want to link a marker to the condition.\rMarker names in this column must match a token marker name exactly, including letter case and hyphens `-` or underscores `_`. If not entered correctly, a token marker will not be linked to the condition correctly, and the marker image will not be applied to tokens when the condition is added to a token.\r#### Description column\rCells in this column refer to a condition's description. Each description must be an ordered or unordered list, with each list item acting as a separate description item or effect for the condition. Nested lists are not supported, but you can add simple font styles such as bold, italic, underline, strikethrough, and font color. You can also add 'buttons' that will send another condition card to chat by wrapping text in a link, and passing in the `!ct conditions|<condition name>` command as the link's URL.",
  "authors": "thatblindgeye",
  "roll20userid": "67635",
  "useroptions": [],
  "dependencies": [],
  "modifies": {
    "state.ConditionTracker": "read,write",
    "campaign.token_markers": "read",
    "token.statusmarkers": "read,write",
    "token.tooltip": "read,write",
    "chat": "read,write"
  },
  "conflicts": []
}
